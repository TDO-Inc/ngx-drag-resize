var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Boundary.html",[0,0.282,1,1.118]],["body/interfaces/Boundary.html",[0,0.341,1,1.721,2,1.016,3,0.529,4,0.529,5,0.529,6,3.207,7,0.432,8,1.492,9,3.139,10,3.139,11,3.139,12,3.139,13,2.984,14,0.777,15,0.054,16,0.432,17,0.034,18,0.043,19,0.034]],["title/interfaces/Movement.html",[0,0.282,20,1.764]],["body/interfaces/Movement.html",[0,0.322,1,1.948,2,0.959,3,0.499,4,0.499,5,0.499,7,0.408,8,1.438,14,0.761,15,0.053,16,0.408,17,0.032,18,0.041,19,0.032,20,2.617,21,3.028,22,1.918,23,2.391,24,3.073,25,3.684,26,1.659,27,2.252,28,3.684,29,3.482,30,2.473,31,0.917,32,2.018,33,2.018,34,1.718]],["title/interfaces/MovementBase.html",[0,0.282,35,1.764]],["body/interfaces/MovementBase.html",[0,0.346,2,1.03,3,0.536,4,0.536,5,0.536,7,0.438,8,1.505,14,0.678,15,0.054,16,0.438,17,0.034,18,0.043,19,0.034,22,2.007,23,2.436,24,3.155,27,2.312,31,0.759,32,2.166,33,2.166,35,2.738,36,2.597,37,2.597,38,3.6,39,3.6]],["title/interfaces/NgxDrag.html",[0,0.282,40,1.764]],["body/interfaces/NgxDrag.html",[0,0.372,1,1.967,2,1.106,3,0.576,4,0.576,5,0.576,7,0.47,8,1.573,14,0.576,15,0.052,16,0.47,17,0.037,18,0.045,19,0.037,22,2.098,26,1.815,27,2.372,30,2.641,31,0.816,34,1.981,40,2.863,41,3.491]],["title/directives/NgxDragDirective.html",[42,1.118,43,1.293]],["body/directives/NgxDragDirective.html",[1,0.891,3,0.121,4,0.121,5,0.121,7,0.099,9,0.866,10,2.469,11,0.866,12,2.469,13,0.737,14,0.348,15,0.057,16,0.099,17,0.008,18,0.014,19,0.008,20,0.866,22,0.359,23,0.634,24,0.866,25,0.587,26,0.738,27,0.359,28,1.038,29,1.684,30,1.196,31,0.887,32,1.916,33,0.866,34,0.417,35,0.49,40,1.163,42,1.017,43,0.634,44,0.359,45,0.735,46,0.417,47,0.866,48,1.631,49,0.634,50,1.981,51,1.299,52,0.866,53,1.746,54,1.163,55,0.49,56,0.49,57,1.605,58,1.299,59,1.684,60,1.038,61,2.108,62,1.746,63,1.746,64,1.746,65,1.299,66,2.108,67,1.299,68,0.866,69,0.49,70,1.773,71,1.746,72,2.108,73,2.876,74,2.96,75,3.061,76,1.163,77,1.509,78,2.04,79,1.299,80,1.163,81,1.163,82,1.299,83,2.661,84,2.148,85,1.746,86,1.746,87,2.408,88,1.924,89,1.605,90,1.509,91,1.299,92,0.735,93,1.299,94,1.299,95,1.924,96,1.509,97,0.735,98,1.299,99,1.395,100,2.125,101,0.735,102,1.299,103,1.746,104,1.746,105,1.299,106,1.299,107,1.924,108,1.746,109,2.408,110,1.746,111,1.299,112,1.299,113,0.735,114,0.634,115,1.746,116,1.299,117,1.299,118,2.148,119,0.735,120,0.49,121,1.924,122,1.299,123,0.49,124,0.359,125,1.746,126,0.735,127,0.735,128,0.735,129,0.735,130,0.735,131,0.49,132,0.49,133,1.038,134,0.735,135,0.735,136,0.735,137,0.735,138,1.299,139,0.735,140,0.417,141,0.417,142,0.417,143,0.49,144,1.163,145,0.49,146,0.49,147,0.49,148,0.311,149,1.299,150,1.684,151,2.469,152,0.735,153,0.735,154,0.735,155,1.395,156,0.587,157,0.735,158,0.735,159,1.299,160,0.735,161,0.735,162,0.587,163,0.735,164,0.735,165,0.735,166,0.735,167,1.773,168,0.735,169,0.735,170,0.49,171,0.735,172,0.866,173,0.735,174,0.49,175,1.916,176,0.587,177,0.49,178,0.735,179,0.735,180,0.735,181,0.735,182,1.746,183,2.408,184,1.746,185,0.735,186,0.735,187,0.735,188,0.735,189,0.735,190,0.735,191,0.735,192,1.746,193,0.735,194,1.746,195,1.299,196,1.746,197,0.735,198,2.408,199,1.299,200,1.299,201,0.735,202,0.735,203,0.735,204,0.735,205,0.735,206,0.735,207,0.735,208,0.735,209,0.735,210,1.299,211,1.746,212,1.299,213,1.746,214,1.299,215,0.735,216,0.735,217,0.735,218,0.735,219,1.299,220,0.735,221,0.735,222,0.735,223,0.735,224,0.735,225,0.735,226,1.299,227,1.299,228,0.735,229,0.735,230,0.735,231,1.299,232,0.735,233,0.735,234,0.735,235,1.299,236,1.299,237,2.108,238,0.866,239,0.866,240,0.735,241,0.735,242,0.735,243,0.735,244,2.108,245,1.299,246,1.299,247,1.299,248,1.299,249,1.299,250,1.299,251,0.735,252,0.735,253,0.735,254,0.49,255,0.735,256,0.735,257,0.735,258,0.735]],["title/directives/NgxDragHandleDirective.html",[42,1.118,259,1.502]],["body/directives/NgxDragHandleDirective.html",[3,0.354,4,0.354,5,0.354,14,0.354,15,0.056,16,0.289,17,0.023,18,0.033,19,0.023,26,1.538,31,0.851,42,1.685,43,2.219,44,1.048,46,1.218,47,2.066,49,1.514,50,2.4,52,2.066,54,2.426,55,1.43,56,1.43,57,2.066,59,1.715,68,2.066,69,1.43,70,2.937,76,2.426,77,2.066,78,1.43,80,1.43,81,1.43,84,2.066,114,1.514,118,2.426,120,1.43,123,1.43,124,1.048,131,1.43,132,1.43,140,1.218,141,1.218,142,1.218,143,1.43,144,1.43,145,1.43,146,1.43,147,1.43,148,0.907,150,1.715,151,2.657,156,1.715,167,2.426,170,1.43,172,2.066,174,1.43,175,1.43,176,2.477,177,1.43,254,2.066,259,1.759,260,3.101,261,1.715,262,2.477,263,2.909,264,2.477,265,3.641,266,2.147,267,2.147,268,1.715,269,1.715,270,2.147,271,2.147,272,2.147]],["title/modules/NgxDragResizeModule.html",[273,1.293,274,1.293]],["body/modules/NgxDragResizeModule.html",[3,0.353,4,0.353,5,0.353,15,0.055,16,0.288,17,0.022,18,0.033,19,0.022,31,1.029,43,2.405,46,1.214,48,1.756,49,1.511,124,1.045,140,1.214,141,1.214,142,1.214,148,0.904,259,2.794,273,1.775,274,2.503,275,1.045,276,1.71,277,1.71,278,2.422,279,1.71,280,1.71,281,2.422,282,1.71,283,1.71,284,1.71,285,1.71,286,3.281,287,2.794,288,2.15,289,2.472,290,1.71,291,1.71,292,2.14,293,2.14,294,2.472,295,2.472,296,2.472,297,2.062,298,2.472,299,2.472,300,2.472,301,2.062,302,2.14,303,2.14,304,3.095,305,2.14,306,2.14,307,2.14]],["title/interfaces/NgxResize.html",[0,0.282,308,2.115]],["body/interfaces/NgxResize.html",[0,0.372,1,1.967,2,1.106,3,0.576,4,0.576,5,0.576,7,0.47,8,1.573,14,0.576,15,0.052,16,0.47,17,0.037,18,0.045,19,0.037,22,2.098,26,1.815,27,2.372,30,2.641,31,0.816,34,1.981,308,3.432,309,3.491]],["title/directives/NgxResizeHandleDirective.html",[42,1.118,287,1.502]],["body/directives/NgxResizeHandleDirective.html",[3,0.31,4,0.31,5,0.31,7,0.253,14,0.617,15,0.056,16,0.253,17,0.02,18,0.03,19,0.02,26,1.424,31,0.874,42,1.58,44,0.917,46,1.066,47,1.874,48,1.595,49,1.826,50,2.385,52,1.874,54,2.245,55,1.252,56,1.252,57,1.874,60,2.246,68,1.874,69,1.252,70,2.801,76,2.245,77,1.912,78,1.874,80,1.252,81,1.252,88,2.246,89,1.252,90,1.066,96,2.122,114,1.826,118,1.874,120,1.252,121,1.501,123,1.252,124,0.917,131,1.252,132,1.252,140,1.066,141,1.066,142,1.066,143,1.252,144,1.252,145,1.252,146,1.252,147,1.252,148,0.794,151,2.245,167,2.245,170,1.252,172,1.874,174,1.252,175,1.874,177,1.252,254,1.252,261,1.501,262,2.246,263,2.692,268,1.501,269,2.246,286,2.801,287,1.595,297,1.874,310,2.692,311,2.812,312,2.812,313,3.741,314,3.37,315,2.812,316,2.692,317,2.812,318,2.812,319,2.812,320,2.812,321,1.879,322,1.879,323,1.879,324,1.879,325,1.879,326,1.501,327,2.812,328,1.879,329,1.879]],["title/interfaces/PositionBase.html",[0,0.282,23,1.293]],["body/interfaces/PositionBase.html",[0,0.37,2,1.101,3,0.573,4,0.573,5,0.573,7,0.468,8,1.568,13,2.877,14,0.706,15,0.053,16,0.468,17,0.036,18,0.045,19,0.036,23,2.092,37,2.775,238,3.231,239,3.231,330,3.474]],["title/interfaces/Scale.html",[0,0.282,331,2.115]],["body/interfaces/Scale.html",[0,0.389,2,1.157,3,0.603,4,0.603,5,0.603,7,0.492,8,1.617,13,2.694,14,0.603,15,0.053,16,0.492,17,0.038,18,0.046,19,0.038,331,3.529,332,3.654,333,4.933]],["title/modules/SharedModule.html",[273,1.293,288,1.293]],["body/modules/SharedModule.html",[3,0.59,4,0.59,5,0.59,15,0.055,16,0.482,17,0.038,18,0.046,19,0.038,31,1.019,124,1.748,133,3.76,148,1.512,275,1.748,278,2.385,281,2.385,288,2.13,301,2.907,334,3.58,335,3.58]],["title/miscellaneous/enumerations.html",[336,0.938,337,2.539]],["body/miscellaneous/enumerations.html",[7,0.438,9,3.155,10,3.155,11,3.155,12,3.155,15,0.055,17,0.034,18,0.043,19,0.034,90,2.908,114,2.007,310,2.597,316,3.283,336,1.373,337,2.597,338,3.251,339,4.11,340,3.251,341,3.251,342,3.251,343,3.251]],["title/index.html",[7,0.299,344,2.221,345,2.221]],["body/index.html",[15,0.05,16,0.373,17,0.029,18,0.039,19,0.029,31,0.865,44,1.351,48,2.811,49,1.351,50,1.57,84,1.844,107,2.211,114,1.351,148,1.169,264,2.211,273,1.351,274,2.036,294,2.211,295,2.211,296,2.957,297,3.302,298,2.211,299,2.211,300,2.211,301,1.844,326,3.557,346,2.768,347,2.211,348,2.768,349,2.768,350,2.768,351,3.702,352,3.702,353,3.702,354,2.768,355,2.768,356,2.768,357,2.768,358,2.768,359,3.702,360,2.768,361,2.768,362,3.702,363,2.768,364,2.768,365,2.768,366,2.768,367,2.768,368,2.768,369,2.768,370,2.768,371,2.768,372,2.768,373,2.768,374,2.768,375,2.768,376,2.768,377,2.768,378,2.768]],["title/modules.html",[275,1.754]],["body/modules.html",[15,0.048,17,0.041,18,0.048,19,0.041,274,1.912,275,1.912,288,1.912,347,3.128,379,3.916,380,3.916,381,4.604,382,3.916,383,3.128]],["title/overview.html",[384,2.869]],["body/overview.html",[2,0.902,15,0.054,17,0.03,18,0.04,19,0.03,43,2.398,44,1.389,259,2.786,273,1.389,274,2.573,275,1.389,276,2.273,277,2.273,278,1.896,279,2.273,280,2.273,281,1.896,282,2.273,283,2.273,284,2.273,285,2.273,286,3.272,287,2.786,288,2.065,289,3.012,290,2.273,291,2.273,384,2.273,385,2.846,386,2.846,387,2.846]],["title/miscellaneous/typealiases.html",[336,0.938,388,3.178]],["body/miscellaneous/typealiases.html",[7,0.452,14,0.554,15,0.054,17,0.035,18,0.044,19,0.035,36,2.683,38,2.683,39,2.683,95,3.351,96,1.905,99,3.351,100,2.683,162,2.683,238,2.238,239,2.238,336,1.419,389,3.359,390,3.359,391,4.195,392,3.359,393,4.195,394,4.195,395,4.195,396,4.195,397,4.195,398,3.359,399,3.359,400,3.359,401,3.359,402,3.359]],["title/miscellaneous/variables.html",[336,0.938,403,2.539]],["body/miscellaneous/variables.html",[7,0.411,14,0.651,15,0.055,17,0.032,18,0.041,19,0.032,74,3.828,77,1.733,89,2.631,90,2.24,96,1.733,155,2.44,336,1.29,383,2.44,403,2.44,404,4.377,405,3.949,406,3.949,407,3.055,408,3.055,409,3.055,410,3.055,411,3.055,412,3.055,413,3.055,414,3.055,415,3.055,416,3.055,417,3.055,418,3.055,419,3.055,420,3.055,421,3.055,422,4.377,423,3.055,424,3.055,425,3.055,426,3.055,427,3.055,428,3.055,429,3.055,430,3.055]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":243,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["11.0.1",{"_index":349,"title":{},"body":{"index.html":{}}}],["2",{"_index":385,"title":{},"body":{"overview.html":{}}}],["4",{"_index":386,"title":{},"body":{"overview.html":{}}}],["7",{"_index":387,"title":{},"body":{"overview.html":{}}}],["above",{"_index":350,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":67,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["add",{"_index":354,"title":{},"body":{"index.html":{}}}],["affect",{"_index":319,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["afterviewinit",{"_index":263,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["aliases",{"_index":389,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":47,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["angular",{"_index":348,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":132,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["angular/core",{"_index":124,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"modules/SharedModule.html":{}}}],["app",{"_index":375,"title":{},"body":{"index.html":{}}}],["application",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":357,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":317,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["author",{"_index":140,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["available",{"_index":383,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["axis",{"_index":95,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":33,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["base.ts",{"_index":37,"title":{},"body":{"interfaces/MovementBase.html":{},"interfaces/PositionBase.html":{}}}],["bootstrap",{"_index":279,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["borders",{"_index":369,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":9,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["bottomleft",{"_index":343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bottomright",{"_index":342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boundary",{"_index":1,"title":{"interfaces/Boundary.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["boundary/boundary.directive",{"_index":335,"title":{},"body":{"modules/SharedModule.html":{}}}],["boundarydirective",{"_index":133,"title":{},"body":{"directives/NgxDragDirective.html":{},"modules/SharedModule.html":{}}}],["boundaryrect",{"_index":219,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.bottom",{"_index":232,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.left",{"_index":227,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.right",{"_index":228,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.top",{"_index":231,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["browse",{"_index":381,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":379,"title":{},"body":{"modules.html":{}}}],["calculation",{"_index":216,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changed",{"_index":157,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changes",{"_index":110,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changing",{"_index":104,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["class",{"_index":148,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["cluster_ngxdragresizemodule",{"_index":282,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["cluster_ngxdragresizemodule_declarations",{"_index":283,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["cluster_ngxdragresizemodule_exports",{"_index":285,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["cluster_ngxdragresizemodule_imports",{"_index":284,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["compiler",{"_index":146,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["const",{"_index":198,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constrain",{"_index":83,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["constructor(elementref",{"_index":69,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["context",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contexts",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core/axis",{"_index":135,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/drag.service",{"_index":136,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/movement/movement",{"_index":138,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/position",{"_index":139,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/window.token",{"_index":137,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["createobserver(target",{"_index":186,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["css",{"_index":85,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["declarations",{"_index":278,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":89,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":88,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["defined",{"_index":78,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["delta",{"_index":333,"title":{},"body":{"interfaces/Scale.html":{}}}],["demo",{"_index":374,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":276,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["description",{"_index":46,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["destroy",{"_index":154,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["destroyed",{"_index":153,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["devices",{"_index":367,"title":{},"body":{"index.html":{}}}],["di",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":42,"title":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["directives",{"_index":44,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"overview.html":{}}}],["disable",{"_index":93,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dmytro",{"_index":141,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["docs",{"_index":377,"title":{},"body":{"index.html":{}}}],["document",{"_index":75,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["documentation",{"_index":376,"title":{},"body":{"index.html":{}}}],["drag",{"_index":48,"title":{},"body":{"directives/NgxDragDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["drag.directive",{"_index":267,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["drag/drag",{"_index":303,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["drag/drag.directive",{"_index":302,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["dragdirective",{"_index":265,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["dragged",{"_index":111,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dragging",{"_index":84,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["dragservice",{"_index":73,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["during",{"_index":320,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["dynamic",{"_index":143,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["e.g",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":50,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["elementref",{"_index":70,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["elements",{"_index":299,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["emitdrag(nativeevent",{"_index":255,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["emits",{"_index":109,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["enumerations",{"_index":337,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":30,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["event.initial",{"_index":195,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.x",{"_index":192,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.y",{"_index":194,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.nativeevent.preventdefault",{"_index":189,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.left",{"_index":222,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.top",{"_index":224,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.x",{"_index":221,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.y",{"_index":223,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventemitter",{"_index":108,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial",{"_index":184,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.x",{"_index":191,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.y",{"_index":193,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["events",{"_index":94,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["example",{"_index":55,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["examples",{"_index":372,"title":{},"body":{"index.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["exports",{"_index":281,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extends",{"_index":22,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["factory",{"_index":415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":91,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{}}}],["find",{"_index":373,"title":{},"body":{"index.html":{}}}],["fingers",{"_index":365,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["free",{"_index":100,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["function/translate3d",{"_index":161,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["functionality",{"_index":298,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["getting",{"_index":344,"title":{"index.html":{}},"body":{}}],["graph",{"_index":382,"title":{},"body":{"modules.html":{}}}],["handle",{"_index":114,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["handle.directive",{"_index":304,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["handle.directive.ts",{"_index":261,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["handle.directive.ts:24",{"_index":266,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["handle.directive.ts:33",{"_index":315,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["host",{"_index":150,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["hostbinding",{"_index":321,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostbinding('attr.data",{"_index":325,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostelementrect",{"_index":182,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.bottom",{"_index":201,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.height",{"_index":233,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.left",{"_index":200,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.right",{"_index":202,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.top",{"_index":199,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.width",{"_index":229,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrectinitial",{"_index":152,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["html",{"_index":49,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["htmlelement",{"_index":29,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["https://angular.io/guide/angular",{"_index":145,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["https://developer.mozilla.org/en",{"_index":159,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["implements",{"_index":52,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["import",{"_index":31,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["imports",{"_index":300,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{}}}],["inheritdoc",{"_index":172,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["initial",{"_index":24,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["initiator",{"_index":25,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["inject",{"_index":120,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(document",{"_index":169,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject(platform_id",{"_index":170,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(window",{"_index":168,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["injectiontoken('lib.window",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":121,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["input('ngxresizehandle",{"_index":324,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["inputs",{"_index":60,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["install",{"_index":351,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"overview.html":{}}}],["isplatformserver",{"_index":131,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["isplatformserver(this.platformid",{"_index":174,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["left",{"_index":10,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["left')}px",{"_index":250,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["legend",{"_index":277,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["library",{"_index":346,"title":{},"body":{"index.html":{}}}],["link",{"_index":254,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["literal",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locks",{"_index":98,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map",{"_index":127,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map((event",{"_index":190,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["mark",{"_index":262,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(boundaryrect.left",{"_index":225,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.max(boundaryrect.top",{"_index":230,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.min",{"_index":226,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["meinitiates",{"_index":360,"title":{},"body":{"index.html":{}}}],["meresize",{"_index":368,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":56,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["methods",{"_index":58,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["miscellaneous",{"_index":336,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":273,"title":{"modules/NgxDragResizeModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":275,"title":{"modules.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":371,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":38,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["movement",{"_index":20,"title":{"interfaces/Movement.html":{}},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["movementbase",{"_index":35,"title":{"interfaces/MovementBase.html":{}},"body":{"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["movementnative",{"_index":391,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":81,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["native.ts",{"_index":393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nativeevent",{"_index":27,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["new",{"_index":155,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":268,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngmodule",{"_index":301,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":177,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngoninit",{"_index":173,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngx",{"_index":326,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["ngxdrag",{"_index":40,"title":{"interfaces/NgxDrag.html":{}},"body":{"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{}}}],["ngxdragboundary",{"_index":61,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragboundary(boundary",{"_index":165,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragdirective",{"_index":43,"title":{"directives/NgxDragDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["ngxdragdisabled",{"_index":62,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragged",{"_index":66,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdraghandle",{"_index":264,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["ngxdraghandledirective",{"_index":259,"title":{"directives/NgxDragHandleDirective.html":{}},"body":{"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["ngxdraglockaxis",{"_index":63,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragpositionstrategy",{"_index":64,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragresizemodule",{"_index":274,"title":{"modules/NgxDragResizeModule.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxresize",{"_index":308,"title":{"interfaces/NgxResize.html":{}},"body":{"interfaces/NgxResize.html":{}}}],["ngxresizedirective",{"_index":286,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"overview.html":{}}}],["ngxresizehandle",{"_index":313,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["ngxresizehandledirective",{"_index":287,"title":{"directives/NgxResizeHandleDirective.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"overview.html":{}}}],["ngxresizehandletype",{"_index":316,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["note",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":352,"title":{},"body":{"index.html":{}}}],["null",{"_index":96,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["object",{"_index":77,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":156,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observabletargetchange",{"_index":158,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["observe",{"_index":59,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observe(target",{"_index":112,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["offsetfromhost",{"_index":28,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["ondestroy",{"_index":54,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ondrag(event",{"_index":217,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["one",{"_index":311,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["oninit",{"_index":53,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["opportunity",{"_index":295,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["options#strictmetadataemit",{"_index":147,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["out",{"_index":291,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["output",{"_index":122,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["outputs",{"_index":65,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["overview",{"_index":384,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["page",{"_index":51,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["parfenov",{"_index":142,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["pipe",{"_index":187,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["platform_id",{"_index":123,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["platformid",{"_index":76,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["point",{"_index":270,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["position",{"_index":32,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["positionbase",{"_index":23,"title":{"interfaces/PositionBase.html":{}},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{}}}],["positioning",{"_index":102,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["positionstrategy",{"_index":99,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["positiontype",{"_index":396,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["private",{"_index":151,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["providers",{"_index":280,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["provides",{"_index":294,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["put",{"_index":86,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["readonly",{"_index":167,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["rect",{"_index":210,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.bottom",{"_index":258,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.left",{"_index":212,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.right",{"_index":257,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.top",{"_index":214,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["relative",{"_index":162,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["renderer",{"_index":71,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["renderer2",{"_index":72,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rendering",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representing",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":290,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["resize",{"_index":297,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["resize.directive",{"_index":323,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resize.module.ts",{"_index":293,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resize/resize",{"_index":306,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resize/resize.directive",{"_index":305,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resizedirective",{"_index":314,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resizing",{"_index":312,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["result",{"_index":17,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":175,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["returns",{"_index":117,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["right",{"_index":11,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["running",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rxjs/operators",{"_index":130,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["same",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale",{"_index":331,"title":{"interfaces/Scale.html":{}},"body":{"interfaces/Scale.html":{}}}],["scroll",{"_index":363,"title":{},"body":{"index.html":{}}}],["see",{"_index":144,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["selector",{"_index":57,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["server",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set",{"_index":164,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["setngxdragboundary(boundary",{"_index":119,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["sets",{"_index":269,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["shared/boundary/boundary",{"_index":34,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["shared/boundary/boundary.directive",{"_index":134,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["shared/shared.module",{"_index":307,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["sharedmodule",{"_index":288,"title":{"modules/SharedModule.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":318,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["simple",{"_index":359,"title":{},"body":{"index.html":{}}}],["site",{"_index":378,"title":{},"body":{"index.html":{}}}],["size",{"_index":149,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"modules/SharedModule.html":{}}}],["spec\\.ts",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../axis.ts",{"_index":390,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../movement",{"_index":392,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../position",{"_index":394,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../resize",{"_index":338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../window.token.ts",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/core/axis.ts",{"_index":398,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement",{"_index":36,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement.ts",{"_index":21,"title":{},"body":{"interfaces/Movement.html":{}}}],["src/lib/core/position",{"_index":330,"title":{},"body":{"interfaces/PositionBase.html":{}}}],["src/lib/core/window.token.ts",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/drag",{"_index":292,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["src/lib/drag/drag",{"_index":260,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["src/lib/drag/drag.directive.ts",{"_index":45,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:129",{"_index":113,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:69",{"_index":101,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:74",{"_index":97,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:79",{"_index":92,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:86",{"_index":82,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:93",{"_index":79,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.ts",{"_index":41,"title":{},"body":{"interfaces/NgxDrag.html":{}}}],["src/lib/drag/position",{"_index":399,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/position",{"_index":400,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/resize",{"_index":310,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/resize/resize.ts",{"_index":309,"title":{},"body":{"interfaces/NgxResize.html":{}}}],["src/lib/resize/scale.ts",{"_index":332,"title":{},"body":{"interfaces/Scale.html":{}}}],["src/lib/shared/boundary/boundary.ts",{"_index":6,"title":{},"body":{"interfaces/Boundary.html":{}}}],["src/lib/shared/shared.module.ts",{"_index":334,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/test.ts",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":345,"title":{"index.html":{}},"body":{}}],["starts",{"_index":215,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy",{"_index":103,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy.ts",{"_index":395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["string",{"_index":87,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["style",{"_index":107,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["subject",{"_index":125,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["subscribe",{"_index":206,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["super(window",{"_index":171,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["support",{"_index":347,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":380,"title":{},"body":{"modules.html":{}}}],["takeuntil",{"_index":128,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.destroy",{"_index":204,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.observabletargetchange",{"_index":205,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap",{"_index":129,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap((event",{"_index":188,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap(this.ondrag.bind(this",{"_index":203,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["target",{"_index":115,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["template",{"_index":358,"title":{},"body":{"index.html":{}}}],["this.basedonboundary(left",{"_index":249,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.basedonboundary(top",{"_index":246,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.boundary",{"_index":166,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.complete",{"_index":179,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.next",{"_index":178,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.dragdirective",{"_index":271,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragdirective.observe(this.elementref.nativeelement",{"_index":272,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragservice",{"_index":185,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement",{"_index":116,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement.getboundingclientrect",{"_index":183,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.emitdrag(event.nativeevent",{"_index":244,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.getboundary",{"_index":220,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial",{"_index":196,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.left",{"_index":235,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.top",{"_index":236,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragdisabled",{"_index":218,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragged.emit",{"_index":256,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdraglockaxis",{"_index":237,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragpositionstrategy",{"_index":234,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.complete",{"_index":180,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.next",{"_index":181,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observe",{"_index":176,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":253,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.resizedirective",{"_index":327,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.observe(this.elementref.nativeelement",{"_index":328,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.unsubscribe(this.elementref.nativeelement",{"_index":329,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.updatehoststyle('left",{"_index":248,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('top",{"_index":245,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('transform",{"_index":240,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updateinitialrect",{"_index":197,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window",{"_index":209,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrollx",{"_index":211,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrolly",{"_index":213,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["token",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":12,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["top')}px",{"_index":247,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["topleft",{"_index":340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["topright",{"_index":341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top}px",{"_index":242,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["touch",{"_index":366,"title":{},"body":{"index.html":{}}}],["touchevent",{"_index":39,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["transform",{"_index":105,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d",{"_index":106,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d(${left}px",{"_index":241,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["true",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":364,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":322,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["type.enum.ts",{"_index":339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.ts",{"_index":397,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":388,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":207,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updatehoststyle(style",{"_index":252,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updateinitialrect",{"_index":208,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updates",{"_index":251,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/position",{"_index":163,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/transform",{"_index":160,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["usage",{"_index":355,"title":{},"body":{"index.html":{}}}],["use",{"_index":296,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["using",{"_index":362,"title":{},"body":{"index.html":{}}}],["value",{"_index":90,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":403,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":118,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["want",{"_index":370,"title":{},"body":{"index.html":{}}}],["web",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":74,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":361,"title":{},"body":{"index.html":{}}}],["worker",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":356,"title":{},"body":{"index.html":{}}}],["x",{"_index":239,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":238,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":353,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":289,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Boundary.html":{"url":"interfaces/Boundary.html","title":"interface - Boundary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Boundary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/shared/boundary/boundary.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Boundary {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Movement.html":{"url":"interfaces/Movement.html","title":"interface - Movement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Movement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        initial\n                                \n                                \n                                        initiator\n                                \n                                \n                                            Optional\n                                        nativeEvent\n                                \n                                \n                                        offsetFromHost\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initiator\n                                    \n                                \n                                \n                                    \n                                        initiator:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:         Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetFromHost\n                                    \n                                \n                                \n                                    \n                                        offsetFromHost:         Boundary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boundary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\nimport {Boundary} from '../../shared/boundary/boundary';\n\nexport interface Movement extends PositionBase {\n  initiator: HTMLElement;\n  offsetFromHost: Boundary;\n  initial: PositionBase;\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovementBase.html":{"url":"interfaces/MovementBase.html","title":"interface - MovementBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovementBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement-base.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        initial\n                                \n                                \n                                        nativeEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\n\nexport interface MovementBase extends PositionBase {\n  initial: PositionBase;\n  nativeEvent: MouseEvent | TouchEvent;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxDrag.html":{"url":"interfaces/NgxDrag.html","title":"interface - NgxDrag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxDrag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nativeEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:         Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxDrag extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragDirective.html":{"url":"directives/NgxDragDirective.html","title":"directive - NgxDragDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxDragDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.directive.ts\n        \n\n            \n                Description\n            \n            \n                The directive that allows to drag HTML element on page\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDrag]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragBoundary\n                            \n                            \n                                ngxDragDisabled\n                            \n                            \n                                ngxDragLockAxis\n                            \n                            \n                                ngxDragPositionStrategy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngxDragBoundary\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2, dragService: DragService, window: Window, document: Document, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/drag/drag.directive.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragService\n                                                  \n                                                        \n                                                                    DragService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Window\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:86\n                            \n                        \n                \n                    \n                        Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragDisabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:79\n                            \n                        \n                \n                    \n                        Disable any drag events\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragLockAxis\n                    \n                \n                \n                    \n                        Type :         Axis\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:74\n                            \n                        \n                \n                    \n                        Locks axis for the dragging\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragPositionStrategy\n                    \n                \n                \n                    \n                        Type :         PositionStrategy\n\n                    \n                \n                \n                    \n                        Default value : 'free'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:69\n                            \n                        \n                \n                    \n                        Define positioning strategy.\n'free' - position will changing by 'transform: translate3d()' style\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngxDragged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:93\n                            \n                        \n                \n                    \n                        Emits changes when element was dragged\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observe\n                        \n                        \n                    \n                \n            \n            \n                \nobserve(target)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/drag/drag.directive.ts:129\n                \n            \n\n\n            \n                \n                    Observe the element dragging which will be as handle for dragging\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.elementRef.nativeElement\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n\n\n                \n                    \n                        setngxDragBoundary(boundary)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/drag/drag.directive.ts:86\n                                \n                            \n                    \n                        \n                                Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            boundary\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DOCUMENT, isPlatformServer } from '@angular/common';\nimport {BoundaryDirective} from '../shared/boundary/boundary.directive';\nimport {PositionStrategy} from './position-strategy';\nimport {Axis} from '../core/axis';\nimport {NgxDrag} from './drag';\nimport {DragService} from '../core/drag.service';\nimport {WINDOW} from '../core/window.token';\nimport {MovementBase} from '../core/movement/movement-base';\nimport {Movement} from '../core/movement/movement';\nimport {Boundary} from '../shared/boundary/boundary';\nimport {PositionBase} from '../core/position-base';\n\n/**\n * The directive that allows to drag HTML element on page\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n  selector: '[ngxDrag]',\n})\nexport class NgxDragDirective extends BoundaryDirective implements OnInit, OnDestroy {\n\n  /**\n   * Initial size and position of host element\n   */\n  private hostElementRectInitial: {\n    left: number;\n    top: number;\n  } | null = null;\n\n  /**\n   * Emits when directive was destroyed\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Emits when observable target was changed\n   */\n  private observableTargetChange$ = new Subject();\n\n  /**\n   * Define positioning strategy.\n   *\n   * 'free' - position will changing by 'transform: translate3d()' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n   *\n   * 'relative' - position will changing by 'top' and 'left' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/position\n   *\n   * Default is 'free'.\n   */\n  @Input() ngxDragPositionStrategy: PositionStrategy = 'free';\n\n  /**\n   * Locks axis for the dragging\n   */\n  @Input() ngxDragLockAxis: Axis = null;\n\n  /**\n   * Disable any drag events\n   */\n  @Input() ngxDragDisabled = false;\n\n  /**\n   * Constrain for the dragging element.\n   * Can be as a HTMLElement or CSS selector.\n   * You can put 'window' string to define window object as a constrain.\n   */\n  @Input() set ngxDragBoundary(boundary: string | HTMLElement) {\n    this.boundary = boundary;\n  }\n\n  /**\n   * Emits changes when element was dragged\n   */\n  @Output() ngxDragged = new EventEmitter();\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    private readonly renderer: Renderer2,\n    private readonly dragService: DragService,\n    @Inject(WINDOW) private readonly window: Window,\n    @Inject(DOCUMENT) private readonly document: Document,\n    @Inject(PLATFORM_ID) private readonly platformId: object\n  ) {\n    super(window, document);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.observableTargetChange$.complete();\n  }\n\n  /**\n   * Observe the element dragging which will be as handle for dragging\n   */\n  observe(target = this.elementRef.nativeElement): void {\n    this.observableTargetChange$.next();\n\n    let hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    let eventInitial: PositionBase | null = null;\n\n    this.dragService\n      .createObserver(target)\n      .pipe(\n        tap((event) => event.nativeEvent.preventDefault()),\n        map((event) => {\n          if (\n            !eventInitial ||\n            eventInitial.x !== event.initial.x ||\n            eventInitial.y !== event.initial.y\n          ) {\n            eventInitial = event.initial;\n            hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n\n            if (!this.hostElementRectInitial) {\n              this.updateInitialRect();\n            }\n          }\n\n          const offsetFromHost = {\n            top: event.initial.y - hostElementRect.top,\n            left: event.initial.x - hostElementRect.left,\n            bottom: hostElementRect.bottom - event.initial.y,\n            right: hostElementRect.right - event.initial.x,\n          } as Boundary;\n\n          return {\n            ...event,\n            initiator: target,\n            offsetFromHost,\n            initial: event.initial,\n          };\n        }),\n        tap(this.onDrag.bind(this)),\n        takeUntil(this.destroy$),\n        takeUntil(this.observableTargetChange$)\n      )\n      .subscribe();\n  }\n\n  /**\n   * Update size and position of host element\n   */\n  private updateInitialRect(): void {\n    if (!this.window) {\n      return;\n    }\n\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.hostElementRectInitial = {\n      left: this.window.scrollX + rect.left,\n      top: this.window.scrollY + rect.top,\n    };\n  }\n\n  /**\n   * Starts the calculation of drag event and changes host position\n   */\n  private onDrag(event: Movement): void {\n    if (this.ngxDragDisabled) {\n      return;\n    }\n\n    const hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const boundaryRect = this.getBoundary();\n\n    let left = event.x - event.offsetFromHost.left;\n    let top = event.y - event.offsetFromHost.top;\n\n    if (boundaryRect) {\n      left = Math.max(boundaryRect.left, left);\n      left = Math.min(\n        boundaryRect.left + (boundaryRect.right - boundaryRect.left) - hostElementRect.width,\n        left\n      );\n\n      top = Math.max(boundaryRect.top, top);\n      top = Math.min(\n        boundaryRect.top + (boundaryRect.bottom - boundaryRect.top) - hostElementRect.height,\n        top\n      );\n    }\n\n    if (this.ngxDragPositionStrategy === 'free' && this.hostElementRectInitial) {\n      left = left - this.hostElementRectInitial.left + this.window.scrollX;\n      top = top - this.hostElementRectInitial.top + this.window.scrollY;\n\n      if (this.ngxDragLockAxis === 'y') {\n        top = hostElementRect.top - this.hostElementRectInitial.top + this.window.scrollY;\n      }\n\n      if (this.ngxDragLockAxis === 'x') {\n        left = hostElementRect.left - this.hostElementRectInitial.left + this.window.scrollX;\n      }\n\n      this.updateHostStyle('transform', `translate3d(${left}px, ${top}px, 0)`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'x') {\n      this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'y') {\n      this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n    this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n    this.emitDrag(event.nativeEvent);\n  }\n\n  /**\n   * Updates the host style\n   */\n  private updateHostStyle(style: string, value: any): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n  }\n\n  /**\n   * Emits drag event to the {@link ngxDragged}\n   */\n  private emitDrag(nativeEvent?: Event): void {\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.ngxDragged.emit({\n      nativeEvent,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragHandleDirective.html":{"url":"directives/NgxDragHandleDirective.html","title":"directive - NgxDragHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxDragHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag-handle.directive.ts\n        \n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as handle of dragging element for NgxDragDirective\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDragHandle]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, dragDirective: NgxDragDirective, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/drag/drag-handle.directive.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragDirective\n                                                  \n                                                        \n                                                                        NgxDragDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxDragDirective} from './drag.directive';\n\n/**\n * The directive that allows to mark HTML element as handle of dragging element for {@link NgxDragDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n  selector: '[ngxDragHandle]',\n})\nexport class NgxDragHandleDirective implements AfterViewInit, OnDestroy {\n  constructor(\n    private readonly elementRef: ElementRef,\n    @Optional() private readonly dragDirective: NgxDragDirective,\n    @Inject(PLATFORM_ID) private readonly platformId: object\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.observe();\n  }\n\n  /**\n   * Sets host element as observable point for {@link NgxDragDirective}\n   */\n  private observe(): void {\n    if (isPlatformServer(this.platformId) || !this.dragDirective) {\n      return;\n    }\n\n    this.dragDirective.observe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxDragResizeModule.html":{"url":"modules/NgxDragResizeModule.html","title":"module - NgxDragResizeModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxDragResizeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxDragResizeModule\n\n\n\ncluster_NgxDragResizeModule_declarations\n\n\n\ncluster_NgxDragResizeModule_imports\n\n\n\ncluster_NgxDragResizeModule_exports\n\n\n\n\nNgxDragDirective\n\nNgxDragDirective\n\n\n\nNgxDragResizeModule\n\nNgxDragResizeModule\n\nNgxDragResizeModule -->\n\nNgxDragDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragHandleDirective\n\nNgxDragHandleDirective\n\nNgxDragResizeModule -->\n\nNgxDragHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeDirective\n\nNgxResizeDirective\n\nNgxDragResizeModule -->\n\nNgxResizeDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeHandleDirective\n\nNgxResizeHandleDirective\n\nNgxDragResizeModule -->\n\nNgxResizeHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragDirective \n\nNgxDragDirective \n\nNgxDragDirective  -->\n\nNgxDragResizeModule->NgxDragDirective \n\n\n\n\n\nNgxDragHandleDirective \n\nNgxDragHandleDirective \n\nNgxDragHandleDirective  -->\n\nNgxDragResizeModule->NgxDragHandleDirective \n\n\n\n\n\nNgxResizeDirective \n\nNgxResizeDirective \n\nNgxResizeDirective  -->\n\nNgxDragResizeModule->NgxResizeDirective \n\n\n\n\n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective  -->\n\nNgxDragResizeModule->NgxResizeHandleDirective \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNgxDragResizeModule -->\n\nSharedModule->NgxDragResizeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/drag-resize.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The module provides opportunity to use drag and resize functionality on HTML elements\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxDragDirective\n                        \n                        \n                            NgxDragHandleDirective\n                        \n                        \n                            NgxResizeDirective\n                        \n                        \n                            NgxResizeHandleDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxDragDirective\n                        \n                        \n                            NgxDragHandleDirective\n                        \n                        \n                            NgxResizeDirective\n                        \n                        \n                            NgxResizeHandleDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NgxDragDirective} from './drag/drag.directive';\nimport {NgxDragHandleDirective} from './drag/drag-handle.directive';\nimport {NgxResizeDirective} from './resize/resize.directive';\nimport {NgxResizeHandleDirective} from './resize/resize-handle.directive';\nimport {SharedModule} from './shared/shared.module';\n\n/**\n * The module provides opportunity to use drag and resize functionality on HTML elements\n *\n * @author Dmytro Parfenov \n */\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    NgxDragDirective,\n    NgxDragHandleDirective,\n    NgxResizeDirective,\n    NgxResizeHandleDirective\n  ],\n  exports: [NgxDragDirective, NgxDragHandleDirective, NgxResizeDirective, NgxResizeHandleDirective]\n})\nexport class NgxDragResizeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxResize.html":{"url":"interfaces/NgxResize.html","title":"interface - NgxResize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxResize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nativeEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:         Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxResize extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxResizeHandleDirective.html":{"url":"directives/NgxResizeHandleDirective.html","title":"directive - NgxResizeHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxResizeHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize-handle.directive.ts\n        \n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as one of handle of resizing element for NgxResizeDirective\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxResizeHandle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResizeHandle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, platformId: object, resizeDirective: NgxResizeDirective)\n                    \n                \n                        \n                            \n                                Defined in src/lib/resize/resize-handle.directive.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resizeDirective\n                                                  \n                                                        \n                                                                        NgxResizeDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResizeHandle\n                    \n                \n                \n                    \n                        Type :         NgxResizeHandleType | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/resize/resize-handle.directive.ts:33\n                            \n                        \n                \n                    \n                        Sets the attribute which define the side the HTML element will affect during drag\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxResizeHandleType} from './resize-handle-type.enum';\nimport {NgxResizeDirective} from './resize.directive';\n\n/**\n * The directive that allows to mark HTML element as one of handle of resizing element for {@link NgxResizeDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n  selector: '[ngxResizeHandle]',\n})\nexport class NgxResizeHandleDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Sets the attribute which define the side the HTML element will affect during drag\n   */\n  @Input('ngxResizeHandle')\n  @HostBinding('attr.data-ngx-resize-handle-type')\n  type: NgxResizeHandleType | null = null;\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    @Inject(PLATFORM_ID) private readonly platformId: object,\n    @Optional() private readonly resizeDirective: NgxResizeDirective\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformServer(this.platformId) || !this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.observe(this.elementRef.nativeElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    if (!this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.unsubscribe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PositionBase.html":{"url":"interfaces/PositionBase.html","title":"interface - PositionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PositionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/position-base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PositionBase {\n  x: number;\n  y: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scale.html":{"url":"interfaces/Scale.html","title":"interface - Scale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/scale.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        delta\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Scale {\n  delta: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BoundaryDirective} from './boundary/boundary.directive';\n\n\n@NgModule({\n  declarations: [\n    BoundaryDirective\n  ],\n  exports: [\n    BoundaryDirective\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxResizeHandleType   (src/.../resize-handle-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/resize/resize-handle-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxResizeHandleType\n                    \n                \n                        \n                            \n                                 TopLeft\n                            \n                        \n                        \n                            \n                                Value : top-left\n                            \n                        \n                        \n                            \n                                 Top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 TopRight\n                            \n                        \n                        \n                            \n                                Value : top-right\n                            \n                        \n                        \n                            \n                                 Right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n                        \n                            \n                                 BottomRight\n                            \n                        \n                        \n                            \n                                Value : bottom-right\n                            \n                        \n                        \n                            \n                                 Bottom\n                            \n                        \n                        \n                            \n                                Value : bottom\n                            \n                        \n                        \n                            \n                                 BottomLeft\n                            \n                        \n                        \n                            \n                                Value : bottom-left\n                            \n                        \n                        \n                            \n                                 Left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-drag-resize\nThe library provides opportunity to use drag and resize functionality on HTML element\nSupport\n\nAngular 11.0.1 and above\n\nInstall\nNPM: npm install ngx-drag-resize\nYarn: yarn add ngx-drag-resize\nUsage\nImport NgxDragResizeModule to your working module\nimport {NgxDragResizeModule} from 'ngx-drag-resize';\n\n@NgModule({\n  imports: [\n    NgxDragResizeModule\n  ]\n})\nexport class AppModule { }Use directives in your template\nSimple drag\ndrag meInitiates only by dragging ngxDragHandle\n\n  drag me\n  handle\nA simple resize will work only by using scroll or two fingers on touch devices\nresize meResize using borders.\nYou have to style all elements as you want.\n\n  resize me\n  \n  \n  \n  \n  \n  \n  \n  \nMore examples you can find in demo app\nDocumentation\nDocs site\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxDragResizeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxDragResizeModule\n\n\n\ncluster_NgxDragResizeModule_declarations\n\n\n\ncluster_NgxDragResizeModule_imports\n\n\n\ncluster_NgxDragResizeModule_exports\n\n\n\n\nNgxDragDirective\n\nNgxDragDirective\n\n\n\nNgxDragResizeModule\n\nNgxDragResizeModule\n\nNgxDragResizeModule -->\n\nNgxDragDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragHandleDirective\n\nNgxDragHandleDirective\n\nNgxDragResizeModule -->\n\nNgxDragHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeDirective\n\nNgxResizeDirective\n\nNgxDragResizeModule -->\n\nNgxResizeDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeHandleDirective\n\nNgxResizeHandleDirective\n\nNgxDragResizeModule -->\n\nNgxResizeHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragDirective \n\nNgxDragDirective \n\nNgxDragDirective  -->\n\nNgxDragResizeModule->NgxDragDirective \n\n\n\n\n\nNgxDragHandleDirective \n\nNgxDragHandleDirective \n\nNgxDragHandleDirective  -->\n\nNgxDragResizeModule->NgxDragHandleDirective \n\n\n\n\n\nNgxResizeDirective \n\nNgxResizeDirective \n\nNgxResizeDirective  -->\n\nNgxDragResizeModule->NgxResizeDirective \n\n\n\n\n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective  -->\n\nNgxDragResizeModule->NgxResizeHandleDirective \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNgxDragResizeModule -->\n\nSharedModule->NgxDragResizeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Axis   (src/.../axis.ts)\n                        \n                        \n                            MovementNative   (src/.../movement-native.ts)\n                        \n                        \n                            PositionStrategy   (src/.../position-strategy.ts)\n                        \n                        \n                            PositionType   (src/.../position-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core/axis.ts\n    \n    \n        \n            \n                \n                    \n                    Axis\n                \n            \n            \n                \n                        \"x\" | \"y\" | null\n\n                \n            \n        \n    \n    src/lib/core/movement/movement-native.ts\n    \n    \n        \n            \n                \n                    \n                    MovementNative\n                \n            \n            \n                \n                        MouseEvent | TouchEvent\n\n                \n            \n        \n    \n    src/lib/drag/position-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    PositionStrategy\n                \n            \n            \n                \n                        \"relative\" | \"free\"\n\n                \n            \n        \n    \n    src/lib/resize/position-type.ts\n    \n    \n        \n            \n                \n                    \n                    PositionType\n                \n            \n            \n                \n                        \"fixed\" | \"absolute\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            WINDOW   (src/.../window.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/lib/core/window.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WINDOW\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('lib.window', {\n  factory: () => (typeof window !== 'undefined' ? window : null)\n})\n                        \n                    \n\n                \n                    \n                        A DI Token representing the window object.\nNote: might not be available in the Application Context when Application and Rendering\nContexts are not the same (e.g. when running the application in a Web Worker or Server).\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
