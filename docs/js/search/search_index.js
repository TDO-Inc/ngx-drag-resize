var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Boundary.html",[0,0.284,1,1.129]],["body/interfaces/Boundary.html",[0,0.338,1,1.71,2,1.006,3,0.628,4,0.628,5,0.628,6,3.174,7,0.427,8,1.482,9,3.128,10,3.128,11,3.128,12,3.128,13,2.98,14,0.774,15,0.054,16,0.524,17,0.033,18,0.043,19,0.033]],["title/interfaces/Movement.html",[0,0.284,20,1.781]],["body/interfaces/Movement.html",[0,0.319,1,1.94,2,0.948,3,0.592,4,0.592,5,0.592,7,0.403,8,1.427,14,0.757,15,0.053,16,0.494,17,0.031,18,0.041,19,0.031,20,2.597,21,2.993,22,1.903,23,2.383,24,3.059,25,3.668,26,1.647,27,2.242,28,3.668,29,3.462,30,2.459,31,1.064,32,1.994,33,1.994,34,1.698]],["title/interfaces/MovementBase.html",[0,0.284,35,1.781]],["body/interfaces/MovementBase.html",[0,0.343,2,1.02,3,0.637,4,0.637,5,0.637,7,0.433,8,1.495,14,0.674,15,0.054,16,0.531,17,0.034,18,0.043,19,0.034,22,1.994,23,2.43,24,3.144,27,2.304,31,0.879,32,2.145,33,2.145,35,2.722,36,2.572,37,2.572,38,3.584,39,3.584]],["title/interfaces/NgxDrag.html",[0,0.284,40,1.781]],["body/interfaces/NgxDrag.html",[0,0.369,1,1.96,2,1.098,3,0.685,4,0.685,5,0.685,7,0.466,8,1.566,14,0.571,15,0.052,16,0.571,17,0.036,18,0.045,19,0.036,22,2.088,26,1.807,27,2.365,30,2.632,31,0.946,34,1.966,40,2.85,41,3.465]],["title/directives/NgxDragDirective.html",[42,1.129,43,1.305]],["body/directives/NgxDragDirective.html",[1,0.87,3,0.141,4,0.141,5,0.141,7,0.096,9,0.841,10,2.438,11,0.841,12,2.438,13,0.716,14,0.34,15,0.057,16,0.117,17,0.007,18,0.013,19,0.007,20,0.841,22,0.347,23,0.616,24,0.841,25,0.568,26,0.719,27,0.347,28,1.008,29,1.645,30,1.168,31,1.024,32,1.881,33,0.841,34,0.404,35,0.474,40,1.134,42,0.996,43,0.616,44,0.347,45,0.712,46,0.404,47,0.841,48,1.602,49,0.616,50,1.953,51,1.262,52,0.841,53,1.701,54,1.134,55,0.474,56,0.474,57,1.57,58,1.262,59,1.645,60,1.008,61,2.059,62,1.701,63,1.701,64,1.701,65,1.262,66,2.059,67,1.262,68,0.841,69,0.474,70,1.738,71,1.701,72,2.059,73,2.823,74,3.658,75,3.009,76,1.134,77,1.738,78,2.005,79,1.262,80,1.134,81,1.134,82,1.262,83,2.608,84,2.113,85,1.701,86,1.701,87,2.357,88,1.883,89,1.57,90,1.48,91,1.262,92,0.712,93,1.262,94,1.262,95,1.883,96,1.738,97,0.712,98,1.262,99,1.359,100,2.084,101,0.712,102,1.262,103,1.701,104,1.701,105,1.262,106,1.262,107,1.883,108,1.701,109,2.357,110,1.701,111,1.262,112,1.262,113,0.712,114,0.616,115,1.701,116,1.262,117,1.262,118,2.113,119,0.712,120,0.474,121,1.883,122,1.262,123,0.474,124,0.404,125,1.701,126,0.712,127,0.712,128,0.712,129,0.712,130,0.712,131,0.474,132,0.474,133,1.262,134,0.712,135,0.712,136,0.712,137,0.712,138,1.262,139,0.712,140,0.404,141,0.404,142,0.404,143,0.474,144,1.134,145,0.474,146,0.474,147,0.474,148,0.347,149,1.262,150,1.645,151,2.438,152,0.712,153,0.712,154,0.712,155,1.701,156,0.568,157,0.712,158,0.712,159,1.262,160,0.712,161,0.712,162,0.568,163,0.712,164,0.712,165,0.712,166,0.712,167,1.738,168,0.712,169,0.712,170,0.474,171,0.712,172,0.841,173,0.712,174,0.474,175,1.881,176,0.568,177,0.474,178,0.712,179,0.712,180,0.712,181,0.712,182,1.701,183,2.357,184,1.701,185,0.712,186,0.712,187,0.712,188,0.712,189,0.712,190,0.712,191,0.712,192,1.701,193,0.712,194,1.701,195,1.262,196,1.701,197,0.712,198,2.357,199,1.262,200,1.262,201,0.712,202,0.712,203,0.712,204,0.712,205,0.712,206,0.712,207,0.712,208,0.712,209,0.712,210,1.262,211,1.701,212,1.262,213,1.701,214,1.262,215,0.712,216,0.712,217,0.712,218,0.712,219,1.262,220,0.712,221,0.712,222,0.712,223,0.712,224,0.712,225,0.712,226,1.262,227,1.262,228,0.712,229,0.712,230,0.712,231,1.262,232,0.712,233,0.712,234,0.712,235,1.262,236,1.262,237,2.059,238,0.841,239,0.841,240,0.712,241,0.712,242,0.712,243,0.712,244,2.059,245,1.262,246,1.262,247,1.262,248,1.262,249,1.262,250,1.262,251,0.712,252,0.712,253,0.712,254,0.474,255,0.712,256,0.712,257,0.712,258,0.712]],["title/directives/NgxDragHandleDirective.html",[42,1.129,259,1.516]],["body/directives/NgxDragHandleDirective.html",[3,0.416,4,0.416,5,0.416,14,0.347,15,0.056,16,0.347,17,0.022,18,0.032,19,0.022,26,1.521,31,0.983,42,1.669,43,2.206,44,1.028,46,1.194,47,2.037,49,1.493,50,2.381,52,2.037,54,2.399,55,1.402,56,1.402,57,2.037,59,1.681,68,2.037,69,1.402,70,2.917,76,2.399,77,2.399,78,1.402,80,1.402,81,1.402,84,2.037,114,1.493,118,2.399,120,1.402,123,1.402,124,1.194,131,1.402,132,1.402,140,1.194,141,1.194,142,1.194,143,1.402,144,1.402,145,1.402,146,1.402,147,1.402,148,1.028,150,1.681,151,2.633,156,1.681,167,2.399,170,1.402,172,2.037,174,1.402,175,1.402,176,2.442,177,1.402,254,2.037,259,1.734,260,3.057,261,1.681,262,2.442,263,2.876,264,2.442,265,3.601,266,2.105,267,2.105,268,1.681,269,1.681,270,2.105,271,2.105,272,2.105]],["title/modules/NgxDragResizeModule.html",[273,1.516,274,1.305]],["body/modules/NgxDragResizeModule.html",[3,0.427,4,0.427,5,0.427,15,0.055,16,0.356,17,0.023,18,0.033,19,0.023,31,1.206,43,2.409,46,1.224,48,1.766,49,1.52,124,1.224,140,1.224,141,1.224,142,1.224,148,1.054,259,2.798,273,2.072,274,2.481,275,1.438,276,1.724,277,1.724,278,2.917,279,1.724,280,1.724,281,2.917,282,1.724,283,1.724,284,1.724,285,3.287,286,2.798,287,2.487,288,1.724,289,1.724,290,2.158,291,2.158,292,2.487,293,2.487,294,2.487,295,2.074,296,2.487,297,2.487,298,2.487,299,2.158,300,2.158,301,3.113,302,2.158,303,2.158,304,3.113,305,2.158,306,1.724]],["title/interfaces/NgxResize.html",[0,0.284,307,2.135]],["body/interfaces/NgxResize.html",[0,0.369,1,1.96,2,1.098,3,0.685,4,0.685,5,0.685,7,0.466,8,1.566,14,0.571,15,0.052,16,0.571,17,0.036,18,0.045,19,0.036,22,2.088,26,1.807,27,2.365,30,2.632,31,0.946,34,1.966,307,3.417,308,3.465]],["title/directives/NgxResizeHandleDirective.html",[42,1.129,286,1.516]],["body/directives/NgxResizeHandleDirective.html",[3,0.363,4,0.363,5,0.363,7,0.247,14,0.61,15,0.056,16,0.303,17,0.019,18,0.029,19,0.019,26,1.405,31,1.01,42,1.563,44,0.897,46,1.042,47,1.843,48,1.569,49,1.806,50,2.365,52,1.843,54,2.215,55,1.224,56,1.224,57,1.843,60,2.209,68,1.843,69,1.224,70,2.777,76,2.215,77,2.215,78,1.843,80,1.224,81,1.224,88,2.209,89,1.224,90,1.042,96,2.465,114,1.806,118,1.843,120,1.224,121,1.468,123,1.224,124,1.042,131,1.224,132,1.224,140,1.042,141,1.042,142,1.042,143,1.224,144,1.224,145,1.224,146,1.224,147,1.224,148,0.897,151,2.215,167,2.215,170,1.224,172,1.843,174,1.224,175,1.843,177,1.224,254,1.224,261,1.468,262,2.209,263,2.656,268,1.468,269,2.209,285,2.777,286,1.569,295,1.843,309,2.656,310,2.765,311,2.765,312,3.699,313,3.325,314,2.765,315,2.656,316,2.765,317,2.765,318,2.765,319,2.765,320,1.838,321,1.838,322,1.838,323,1.838,324,1.838,325,1.468,326,2.765,327,1.838,328,1.838]],["title/interfaces/PositionBase.html",[0,0.284,23,1.305]],["body/interfaces/PositionBase.html",[0,0.367,2,1.092,3,0.682,4,0.682,5,0.682,7,0.464,8,1.561,13,2.872,14,0.703,15,0.053,16,0.569,17,0.036,18,0.045,19,0.036,23,2.082,37,2.754,238,3.222,239,3.222,329,3.448]],["title/interfaces/Scale.html",[0,0.284,330,2.135]],["body/interfaces/Scale.html",[0,0.387,2,1.151,3,0.718,4,0.718,5,0.718,7,0.489,8,1.611,13,2.687,14,0.599,15,0.053,16,0.599,17,0.038,18,0.046,19,0.038,330,3.516,331,3.632,332,4.924]],["title/changelog.html",[333,1.795,334,1.795,335,1.795]],["body/changelog.html",[15,0.049,17,0.041,18,0.049,19,0.041,335,3.154,336,3.948,337,3.154,338,3.948,339,3.948,340,3.948,341,3.948,342,3.948]],["title/miscellaneous/enumerations.html",[343,0.949,344,2.56]],["body/miscellaneous/enumerations.html",[7,0.433,9,3.144,10,3.144,11,3.144,12,3.144,15,0.055,17,0.034,18,0.043,19,0.034,90,2.902,114,1.994,309,2.572,315,3.263,343,1.36,344,2.572,345,3.22,346,4.085,347,3.22,348,3.22,349,3.22,350,3.22]],["title/index.html",[7,0.303,333,1.795,334,1.795]],["body/index.html",[15,0.05,16,0.448,17,0.029,18,0.038,19,0.029,31,0.998,44,1.327,48,2.8,49,1.327,50,1.542,84,1.811,107,2.171,114,1.327,148,1.327,264,2.171,273,1.542,274,2.018,292,2.171,293,2.171,294,2.921,295,3.288,296,2.171,297,2.171,298,2.171,306,2.171,325,3.531,337,2.171,351,2.718,352,2.718,353,3.657,354,3.657,355,3.657,356,3.657,357,2.718,358,2.718,359,2.718,360,2.718,361,2.718,362,3.657,363,2.718,364,2.718,365,3.657,366,2.718,367,2.718,368,2.718,369,2.718,370,2.718,371,2.718,372,2.718,373,2.718,374,2.718,375,2.718,376,2.718,377,2.718,378,2.718,379,2.718,380,2.718,381,2.718,382,2.718]],["title/modules.html",[275,2.409]],["body/modules.html",[15,0.049,17,0.042,18,0.049,19,0.042,274,1.95,275,2.661,383,3.994,384,3.994,385,3.994,386,3.994]],["title/overview.html",[387,2.888]],["body/overview.html",[2,0.916,15,0.054,17,0.03,18,0.04,19,0.03,43,2.407,44,1.412,259,2.796,273,2.162,274,2.557,276,2.31,277,2.31,278,2.31,279,2.31,280,2.31,281,2.31,282,2.31,283,2.31,284,2.31,285,3.284,286,2.796,287,3.044,288,2.31,289,2.31,387,2.31,388,2.891,389,2.891,390,2.891]],["title/miscellaneous/typealiases.html",[343,0.949,391,3.205]],["body/miscellaneous/typealiases.html",[7,0.448,14,0.549,15,0.053,17,0.035,18,0.044,19,0.035,36,2.66,38,2.66,39,2.66,95,3.333,96,2.219,99,3.333,100,2.66,162,2.66,238,2.219,239,2.219,343,1.407,392,3.33,393,3.33,394,4.172,395,3.33,396,4.172,397,4.172,398,4.172,399,4.172,400,4.172,401,3.33,402,3.33,403,3.33,404,3.33,405,3.33]],["title/miscellaneous/variables.html",[343,0.949,406,2.56]],["body/miscellaneous/variables.html",[7,0.497,14,0.733,15,0.052,17,0.039,18,0.047,19,0.039,89,2.459,90,2.094,343,1.559,406,2.948,407,4.445,408,4.445,409,4.445,410,3.691,411,3.691,412,3.691,413,3.691,414,3.691]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":243,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["0.0.2",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":388,"title":{},"body":{"overview.html":{}}}],["4",{"_index":389,"title":{},"body":{"overview.html":{}}}],["7",{"_index":390,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":67,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["add",{"_index":357,"title":{},"body":{"index.html":{}}}],["added",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":318,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["afterviewinit",{"_index":263,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["aliases",{"_index":392,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":47,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["angular",{"_index":351,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":132,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["angular/core",{"_index":124,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["app",{"_index":377,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":360,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":316,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["author",{"_index":140,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["axis",{"_index":95,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":33,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["base.ts",{"_index":37,"title":{},"body":{"interfaces/MovementBase.html":{},"interfaces/PositionBase.html":{}}}],["bootstrap",{"_index":279,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["borders",{"_index":372,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":9,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["bottomleft",{"_index":350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bottomright",{"_index":349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boundary",{"_index":1,"title":{"interfaces/Boundary.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["boundarydirective",{"_index":133,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect",{"_index":219,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.bottom",{"_index":232,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.left",{"_index":227,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.right",{"_index":228,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.top",{"_index":231,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["browse",{"_index":386,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":383,"title":{},"body":{"modules.html":{}}}],["calculation",{"_index":216,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changed",{"_index":157,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changelog",{"_index":335,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":110,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changing",{"_index":104,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["class",{"_index":148,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["cluster_ngxdragresizemodule",{"_index":282,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["cluster_ngxdragresizemodule_declarations",{"_index":284,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["cluster_ngxdragresizemodule_exports",{"_index":283,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["compiler",{"_index":146,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["const",{"_index":198,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constrain",{"_index":83,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["constructor(elementref",{"_index":69,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["context",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":380,"title":{},"body":{"index.html":{}}}],["core/axis",{"_index":135,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/drag.service",{"_index":136,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/movement/movement",{"_index":138,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/position",{"_index":139,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/window.token",{"_index":137,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["css",{"_index":85,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["declarations",{"_index":278,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["default",{"_index":89,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":88,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["defined",{"_index":78,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["delta",{"_index":332,"title":{},"body":{"interfaces/Scale.html":{}}}],["demo",{"_index":353,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":276,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["description",{"_index":46,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["destroy",{"_index":154,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["destroyed",{"_index":153,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["development",{"_index":381,"title":{},"body":{"index.html":{}}}],["devices",{"_index":370,"title":{},"body":{"index.html":{}}}],["directive",{"_index":42,"title":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["directives",{"_index":44,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"overview.html":{}}}],["disable",{"_index":93,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dmytro",{"_index":141,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["docs",{"_index":378,"title":{},"body":{"index.html":{}}}],["document",{"_index":75,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["documentation",{"_index":337,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["drag",{"_index":48,"title":{},"body":{"directives/NgxDragDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["drag.directive",{"_index":267,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["drag/drag",{"_index":300,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["drag/drag.directive",{"_index":299,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["dragdirective",{"_index":265,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["dragged",{"_index":111,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dragging",{"_index":84,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["dragservice",{"_index":73,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["during",{"_index":319,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["dynamic",{"_index":143,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["element",{"_index":50,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["elementref",{"_index":70,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["elements",{"_index":297,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["emitdrag(nativeevent",{"_index":255,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["emits",{"_index":109,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["enumerations",{"_index":344,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":30,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["event.initial",{"_index":195,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.x",{"_index":192,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.y",{"_index":194,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.nativeevent.preventdefault",{"_index":189,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.left",{"_index":222,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.top",{"_index":224,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.x",{"_index":221,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.y",{"_index":223,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventemitter",{"_index":108,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial",{"_index":184,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.x",{"_index":191,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.y",{"_index":193,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["events",{"_index":94,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["example",{"_index":55,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["examples",{"_index":375,"title":{},"body":{"index.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"index.html":{}}}],["exports",{"_index":281,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["extends",{"_index":22,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["false",{"_index":91,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["find",{"_index":376,"title":{},"body":{"index.html":{}}}],["fingers",{"_index":368,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["free",{"_index":100,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["fromelement(target",{"_index":186,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["function/translate3d",{"_index":161,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["functionality",{"_index":296,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["getting",{"_index":333,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["handle",{"_index":114,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["handle.directive",{"_index":301,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["handle.directive.ts",{"_index":261,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["handle.directive.ts:24",{"_index":266,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["handle.directive.ts:33",{"_index":314,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["host",{"_index":150,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["hostbinding",{"_index":320,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostbinding('attr.data",{"_index":324,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostelementrect",{"_index":182,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.bottom",{"_index":201,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.height",{"_index":233,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.left",{"_index":200,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.right",{"_index":202,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.top",{"_index":199,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.width",{"_index":229,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrectinitial",{"_index":152,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["html",{"_index":49,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["htmlelement",{"_index":29,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["https://angular.io/guide/angular",{"_index":145,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["https://developer.mozilla.org/en",{"_index":159,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["implements",{"_index":52,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["import",{"_index":31,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["imports",{"_index":306,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["inheritdoc",{"_index":172,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["initial",{"_index":24,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["initiator",{"_index":25,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["inject",{"_index":120,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(document",{"_index":169,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject(platform_id",{"_index":170,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(window",{"_index":168,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["input",{"_index":121,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["input('ngxresizehandle",{"_index":323,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["inputs",{"_index":60,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["install",{"_index":354,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"overview.html":{}}}],["isplatformserver",{"_index":131,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["isplatformserver(this.platformid",{"_index":174,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["left",{"_index":10,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["left')}px",{"_index":250,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["legend",{"_index":277,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["library",{"_index":352,"title":{},"body":{"index.html":{}}}],["link",{"_index":254,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["literal",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locks",{"_index":98,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map",{"_index":127,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map((event",{"_index":190,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["mark",{"_index":262,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(boundaryrect.left",{"_index":225,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.max(boundaryrect.top",{"_index":230,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.min",{"_index":226,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["meinitiates",{"_index":363,"title":{},"body":{"index.html":{}}}],["meresize",{"_index":371,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":56,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["methods",{"_index":58,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["miscellaneous",{"_index":343,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":273,"title":{"modules/NgxDragResizeModule.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":275,"title":{"modules.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"modules.html":{}}}],["more",{"_index":374,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":38,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["movement",{"_index":20,"title":{"interfaces/Movement.html":{}},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["movementbase",{"_index":35,"title":{"interfaces/MovementBase.html":{}},"body":{"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["movementnative",{"_index":394,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":81,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["native.ts",{"_index":396,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nativeevent",{"_index":27,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["new",{"_index":155,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngafterviewinit",{"_index":268,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngmodule",{"_index":298,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":177,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngoninit",{"_index":173,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngx",{"_index":325,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["ngxdrag",{"_index":40,"title":{"interfaces/NgxDrag.html":{}},"body":{"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{}}}],["ngxdragboundary",{"_index":61,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragboundary(boundary",{"_index":165,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragdirective",{"_index":43,"title":{"directives/NgxDragDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["ngxdragdisabled",{"_index":62,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragged",{"_index":66,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdraghandle",{"_index":264,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["ngxdraghandledirective",{"_index":259,"title":{"directives/NgxDragHandleDirective.html":{}},"body":{"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["ngxdraglockaxis",{"_index":63,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragpositionstrategy",{"_index":64,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragresizemodule",{"_index":274,"title":{"modules/NgxDragResizeModule.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxresize",{"_index":307,"title":{"interfaces/NgxResize.html":{}},"body":{"interfaces/NgxResize.html":{}}}],["ngxresizedirective",{"_index":285,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"overview.html":{}}}],["ngxresizehandle",{"_index":312,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["ngxresizehandledirective",{"_index":286,"title":{"directives/NgxResizeHandleDirective.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"overview.html":{}}}],["ngxresizehandletype",{"_index":315,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["npm",{"_index":355,"title":{},"body":{"index.html":{}}}],["null",{"_index":96,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["object",{"_index":77,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["observable",{"_index":156,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observabletargetchange",{"_index":158,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["observe",{"_index":59,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observe(target",{"_index":112,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["offsetfromhost",{"_index":28,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["ondestroy",{"_index":54,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ondrag(event",{"_index":217,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["one",{"_index":310,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["oninit",{"_index":53,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["opportunity",{"_index":293,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["options#strictmetadataemit",{"_index":147,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["out",{"_index":289,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["output",{"_index":122,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["outputs",{"_index":65,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["overview",{"_index":387,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["page",{"_index":51,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["parfenov",{"_index":142,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["pipe",{"_index":187,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["platform_id",{"_index":123,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["platformid",{"_index":76,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["point",{"_index":270,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["position",{"_index":32,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["positionbase",{"_index":23,"title":{"interfaces/PositionBase.html":{}},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{}}}],["positioning",{"_index":102,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["positionstrategy",{"_index":99,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["positiontype",{"_index":399,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["private",{"_index":151,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["providers",{"_index":280,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["provides",{"_index":292,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["put",{"_index":86,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["readonly",{"_index":167,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["rect",{"_index":210,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.bottom",{"_index":258,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.left",{"_index":212,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.right",{"_index":257,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.top",{"_index":214,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["relative",{"_index":162,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["renderer",{"_index":71,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["renderer2",{"_index":72,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["repository",{"_index":382,"title":{},"body":{"index.html":{}}}],["require",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":288,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["resize",{"_index":295,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["resize.directive",{"_index":322,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resize.module.ts",{"_index":291,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resize/resize",{"_index":303,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resize/resize.directive",{"_index":302,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resizedirective",{"_index":313,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resizing",{"_index":311,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["result",{"_index":17,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":175,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["returns",{"_index":117,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["right",{"_index":11,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rxjs/operators",{"_index":130,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["scale",{"_index":330,"title":{"interfaces/Scale.html":{}},"body":{"interfaces/Scale.html":{}}}],["scroll",{"_index":366,"title":{},"body":{"index.html":{}}}],["see",{"_index":144,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["selector",{"_index":57,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["set",{"_index":164,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["setngxdragboundary(boundary",{"_index":119,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["sets",{"_index":269,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["shared/boundary/boundary",{"_index":34,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["shared/boundary/boundary.directive",{"_index":134,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["shared/shared.module",{"_index":305,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["sharedmodule",{"_index":304,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["side",{"_index":317,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["simple",{"_index":362,"title":{},"body":{"index.html":{}}}],["site",{"_index":379,"title":{},"body":{"index.html":{}}}],["size",{"_index":149,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["spec\\.ts",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../axis.ts",{"_index":393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../movement",{"_index":395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../position",{"_index":397,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../resize",{"_index":345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/core/axis.ts",{"_index":401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement",{"_index":36,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement.ts",{"_index":21,"title":{},"body":{"interfaces/Movement.html":{}}}],["src/lib/core/position",{"_index":329,"title":{},"body":{"interfaces/PositionBase.html":{}}}],["src/lib/drag",{"_index":290,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["src/lib/drag/drag",{"_index":260,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["src/lib/drag/drag.directive.ts",{"_index":45,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:129",{"_index":113,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:69",{"_index":101,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:74",{"_index":97,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:79",{"_index":92,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:86",{"_index":82,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:93",{"_index":79,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.ts",{"_index":41,"title":{},"body":{"interfaces/NgxDrag.html":{}}}],["src/lib/drag/position",{"_index":402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/position",{"_index":403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/resize",{"_index":309,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/resize/resize.ts",{"_index":308,"title":{},"body":{"interfaces/NgxResize.html":{}}}],["src/lib/resize/scale.ts",{"_index":331,"title":{},"body":{"interfaces/Scale.html":{}}}],["src/lib/shared/boundary/boundary.ts",{"_index":6,"title":{},"body":{"interfaces/Boundary.html":{}}}],["src/test.ts",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":334,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starts",{"_index":215,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy",{"_index":103,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy.ts",{"_index":398,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["string",{"_index":87,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["style",{"_index":107,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["subject",{"_index":125,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["subscribe",{"_index":206,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["super(window",{"_index":171,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["support",{"_index":384,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":385,"title":{},"body":{"modules.html":{}}}],["takeuntil",{"_index":128,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.destroy",{"_index":204,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.observabletargetchange",{"_index":205,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap",{"_index":129,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap((event",{"_index":188,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap(this.ondrag.bind(this",{"_index":203,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["target",{"_index":115,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["template",{"_index":361,"title":{},"body":{"index.html":{}}}],["tests",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["this.basedonboundary(left",{"_index":249,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.basedonboundary(top",{"_index":246,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.boundary",{"_index":166,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.complete",{"_index":179,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.next",{"_index":178,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.dragdirective",{"_index":271,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragdirective.observe(this.elementref.nativeelement",{"_index":272,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragservice",{"_index":185,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement",{"_index":116,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement.getboundingclientrect",{"_index":183,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.emitdrag(event.nativeevent",{"_index":244,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.getboundary",{"_index":220,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial",{"_index":196,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.left",{"_index":235,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.top",{"_index":236,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragdisabled",{"_index":218,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragged.emit",{"_index":256,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdraglockaxis",{"_index":237,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragpositionstrategy",{"_index":234,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.complete",{"_index":180,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.next",{"_index":181,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observe",{"_index":176,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":253,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.resizedirective",{"_index":326,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.observe(this.elementref.nativeelement",{"_index":327,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.unsubscribe(this.elementref.nativeelement",{"_index":328,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.updatehoststyle('left",{"_index":248,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('top",{"_index":245,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('transform",{"_index":240,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updateinitialrect",{"_index":197,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window",{"_index":209,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrollx",{"_index":211,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrolly",{"_index":213,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["top",{"_index":12,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["top')}px",{"_index":247,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["topleft",{"_index":347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["topright",{"_index":348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top}px",{"_index":242,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["touch",{"_index":369,"title":{},"body":{"index.html":{}}}],["touchevent",{"_index":39,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["transform",{"_index":105,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d",{"_index":106,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d(${left}px",{"_index":241,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["true",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":367,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":321,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["type.enum.ts",{"_index":346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.ts",{"_index":400,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":391,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typos",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":207,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updatehoststyle(style",{"_index":252,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updateinitialrect",{"_index":208,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updates",{"_index":251,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/position",{"_index":163,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/transform",{"_index":160,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["usage",{"_index":358,"title":{},"body":{"index.html":{}}}],["use",{"_index":294,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["using",{"_index":365,"title":{},"body":{"index.html":{}}}],["value",{"_index":90,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":406,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":118,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["want",{"_index":373,"title":{},"body":{"index.html":{}}}],["window",{"_index":74,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["work",{"_index":364,"title":{},"body":{"index.html":{}}}],["working",{"_index":359,"title":{},"body":{"index.html":{}}}],["x",{"_index":239,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":238,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":356,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":287,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Boundary.html":{"url":"interfaces/Boundary.html","title":"interface - Boundary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Boundary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/shared/boundary/boundary.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Boundary {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Movement.html":{"url":"interfaces/Movement.html","title":"interface - Movement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Movement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        initial\n                                \n                                \n                                        initiator\n                                \n                                \n                                            Optional\n                                        nativeEvent\n                                \n                                \n                                        offsetFromHost\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initiator\n                                    \n                                \n                                \n                                    \n                                        initiator:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:         Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetFromHost\n                                    \n                                \n                                \n                                    \n                                        offsetFromHost:         Boundary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boundary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\nimport {Boundary} from '../../shared/boundary/boundary';\n\nexport interface Movement extends PositionBase {\n  initiator: HTMLElement;\n  offsetFromHost: Boundary;\n  initial: PositionBase;\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovementBase.html":{"url":"interfaces/MovementBase.html","title":"interface - MovementBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MovementBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement-base.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        initial\n                                \n                                \n                                        nativeEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\n\nexport interface MovementBase extends PositionBase {\n  initial: PositionBase;\n  nativeEvent: MouseEvent | TouchEvent;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxDrag.html":{"url":"interfaces/NgxDrag.html","title":"interface - NgxDrag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxDrag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nativeEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:         Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxDrag extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragDirective.html":{"url":"directives/NgxDragDirective.html","title":"directive - NgxDragDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxDragDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.directive.ts\n        \n\n            \n                Description\n            \n            \n                The directive that allows to drag HTML element on page\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDrag]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragBoundary\n                            \n                            \n                                ngxDragDisabled\n                            \n                            \n                                ngxDragLockAxis\n                            \n                            \n                                ngxDragPositionStrategy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngxDragBoundary\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2, dragService: DragService, window: Window, document: Document, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/drag/drag.directive.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragService\n                                                  \n                                                        \n                                                                    DragService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Window\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:86\n                            \n                        \n                \n                    \n                        Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragDisabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:79\n                            \n                        \n                \n                    \n                        Disable any drag events\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragLockAxis\n                    \n                \n                \n                    \n                        Type :         Axis\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:74\n                            \n                        \n                \n                    \n                        Locks axis for the dragging\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragPositionStrategy\n                    \n                \n                \n                    \n                        Type :         PositionStrategy\n\n                    \n                \n                \n                    \n                        Default value : 'free'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:69\n                            \n                        \n                \n                    \n                        Define positioning strategy.\n'free' - position will changing by 'transform: translate3d()' style\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngxDragged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:93\n                            \n                        \n                \n                    \n                        Emits changes when element was dragged\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observe\n                        \n                        \n                    \n                \n            \n            \n                \nobserve(target)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/drag/drag.directive.ts:129\n                \n            \n\n\n            \n                \n                    Observe the element dragging which will be as handle for dragging\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.elementRef.nativeElement\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n\n\n                \n                    \n                        setngxDragBoundary(boundary)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/drag/drag.directive.ts:86\n                                \n                            \n                    \n                        \n                                Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            boundary\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DOCUMENT, isPlatformServer } from '@angular/common';\nimport {BoundaryDirective} from '../shared/boundary/boundary.directive';\nimport {PositionStrategy} from './position-strategy';\nimport {Axis} from '../core/axis';\nimport {NgxDrag} from './drag';\nimport {DragService} from '../core/drag.service';\nimport {WINDOW} from '../core/window.token';\nimport {MovementBase} from '../core/movement/movement-base';\nimport {Movement} from '../core/movement/movement';\nimport {Boundary} from '../shared/boundary/boundary';\nimport {PositionBase} from '../core/position-base';\n\n/**\n * The directive that allows to drag HTML element on page\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n  selector: '[ngxDrag]',\n})\nexport class NgxDragDirective extends BoundaryDirective implements OnInit, OnDestroy {\n\n  /**\n   * Initial size and position of host element\n   */\n  private hostElementRectInitial: {\n    left: number;\n    top: number;\n  } | null = null;\n\n  /**\n   * Emits when directive was destroyed\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Emits when observable target was changed\n   */\n  private observableTargetChange$ = new Subject();\n\n  /**\n   * Define positioning strategy.\n   *\n   * 'free' - position will changing by 'transform: translate3d()' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n   *\n   * 'relative' - position will changing by 'top' and 'left' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/position\n   *\n   * Default is 'free'.\n   */\n  @Input() ngxDragPositionStrategy: PositionStrategy = 'free';\n\n  /**\n   * Locks axis for the dragging\n   */\n  @Input() ngxDragLockAxis: Axis = null;\n\n  /**\n   * Disable any drag events\n   */\n  @Input() ngxDragDisabled = false;\n\n  /**\n   * Constrain for the dragging element.\n   * Can be as a HTMLElement or CSS selector.\n   * You can put 'window' string to define window object as a constrain.\n   */\n  @Input() set ngxDragBoundary(boundary: string | HTMLElement) {\n    this.boundary = boundary;\n  }\n\n  /**\n   * Emits changes when element was dragged\n   */\n  @Output() ngxDragged = new EventEmitter();\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    private readonly renderer: Renderer2,\n    private readonly dragService: DragService,\n    @Inject(WINDOW) private readonly window: Window,\n    @Inject(DOCUMENT) private readonly document: Document,\n    @Inject(PLATFORM_ID) private readonly platformId: object\n  ) {\n    super(window, document);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.observableTargetChange$.complete();\n  }\n\n  /**\n   * Observe the element dragging which will be as handle for dragging\n   */\n  observe(target = this.elementRef.nativeElement): void {\n    this.observableTargetChange$.next();\n\n    let hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    let eventInitial: PositionBase | null = null;\n\n    this.dragService\n      .fromElement(target)\n      .pipe(\n        tap((event) => event.nativeEvent.preventDefault()),\n        map((event) => {\n          if (\n            !eventInitial ||\n            eventInitial.x !== event.initial.x ||\n            eventInitial.y !== event.initial.y\n          ) {\n            eventInitial = event.initial;\n            hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n\n            if (!this.hostElementRectInitial) {\n              this.updateInitialRect();\n            }\n          }\n\n          const offsetFromHost = {\n            top: event.initial.y - hostElementRect.top,\n            left: event.initial.x - hostElementRect.left,\n            bottom: hostElementRect.bottom - event.initial.y,\n            right: hostElementRect.right - event.initial.x,\n          } as Boundary;\n\n          return {\n            ...event,\n            initiator: target,\n            offsetFromHost,\n            initial: event.initial,\n          };\n        }),\n        tap(this.onDrag.bind(this)),\n        takeUntil(this.destroy$),\n        takeUntil(this.observableTargetChange$)\n      )\n      .subscribe();\n  }\n\n  /**\n   * Update size and position of host element\n   */\n  private updateInitialRect(): void {\n    if (!this.window) {\n      return;\n    }\n\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.hostElementRectInitial = {\n      left: this.window.scrollX + rect.left,\n      top: this.window.scrollY + rect.top,\n    };\n  }\n\n  /**\n   * Starts the calculation of drag event and changes host position\n   */\n  private onDrag(event: Movement): void {\n    if (this.ngxDragDisabled) {\n      return;\n    }\n\n    const hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const boundaryRect = this.getBoundary();\n\n    let left = event.x - event.offsetFromHost.left;\n    let top = event.y - event.offsetFromHost.top;\n\n    if (boundaryRect) {\n      left = Math.max(boundaryRect.left, left);\n      left = Math.min(\n        boundaryRect.left + (boundaryRect.right - boundaryRect.left) - hostElementRect.width,\n        left\n      );\n\n      top = Math.max(boundaryRect.top, top);\n      top = Math.min(\n        boundaryRect.top + (boundaryRect.bottom - boundaryRect.top) - hostElementRect.height,\n        top\n      );\n    }\n\n    if (this.ngxDragPositionStrategy === 'free' && this.hostElementRectInitial) {\n      left = left - this.hostElementRectInitial.left + this.window.scrollX;\n      top = top - this.hostElementRectInitial.top + this.window.scrollY;\n\n      if (this.ngxDragLockAxis === 'y') {\n        top = hostElementRect.top - this.hostElementRectInitial.top + this.window.scrollY;\n      }\n\n      if (this.ngxDragLockAxis === 'x') {\n        left = hostElementRect.left - this.hostElementRectInitial.left + this.window.scrollX;\n      }\n\n      this.updateHostStyle('transform', `translate3d(${left}px, ${top}px, 0)`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'x') {\n      this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'y') {\n      this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n    this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n    this.emitDrag(event.nativeEvent);\n  }\n\n  /**\n   * Updates the host style\n   */\n  private updateHostStyle(style: string, value: any): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n  }\n\n  /**\n   * Emits drag event to the {@link ngxDragged}\n   */\n  private emitDrag(nativeEvent?: Event): void {\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.ngxDragged.emit({\n      nativeEvent,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragHandleDirective.html":{"url":"directives/NgxDragHandleDirective.html","title":"directive - NgxDragHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxDragHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag-handle.directive.ts\n        \n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as handle of dragging element for NgxDragDirective\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDragHandle]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, dragDirective: NgxDragDirective, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/drag/drag-handle.directive.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragDirective\n                                                  \n                                                        \n                                                                        NgxDragDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxDragDirective} from './drag.directive';\n\n/**\n * The directive that allows to mark HTML element as handle of dragging element for {@link NgxDragDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n  selector: '[ngxDragHandle]',\n})\nexport class NgxDragHandleDirective implements AfterViewInit, OnDestroy {\n  constructor(\n    private readonly elementRef: ElementRef,\n    @Optional() private readonly dragDirective: NgxDragDirective,\n    @Inject(PLATFORM_ID) private readonly platformId: object\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.observe();\n  }\n\n  /**\n   * Sets host element as observable point for {@link NgxDragDirective}\n   */\n  private observe(): void {\n    if (isPlatformServer(this.platformId) || !this.dragDirective) {\n      return;\n    }\n\n    this.dragDirective.observe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxDragResizeModule.html":{"url":"modules/NgxDragResizeModule.html","title":"module - NgxDragResizeModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxDragResizeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxDragResizeModule\n\n\n\ncluster_NgxDragResizeModule_exports\n\n\n\ncluster_NgxDragResizeModule_declarations\n\n\n\n\nNgxDragDirective\n\nNgxDragDirective\n\n\n\nNgxDragResizeModule\n\nNgxDragResizeModule\n\nNgxDragResizeModule -->\n\nNgxDragDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragHandleDirective\n\nNgxDragHandleDirective\n\nNgxDragResizeModule -->\n\nNgxDragHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeDirective\n\nNgxResizeDirective\n\nNgxDragResizeModule -->\n\nNgxResizeDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeHandleDirective\n\nNgxResizeHandleDirective\n\nNgxDragResizeModule -->\n\nNgxResizeHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragDirective \n\nNgxDragDirective \n\nNgxDragDirective  -->\n\nNgxDragResizeModule->NgxDragDirective \n\n\n\n\n\nNgxDragHandleDirective \n\nNgxDragHandleDirective \n\nNgxDragHandleDirective  -->\n\nNgxDragResizeModule->NgxDragHandleDirective \n\n\n\n\n\nNgxResizeDirective \n\nNgxResizeDirective \n\nNgxResizeDirective  -->\n\nNgxDragResizeModule->NgxResizeDirective \n\n\n\n\n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective  -->\n\nNgxDragResizeModule->NgxResizeHandleDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/drag-resize.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The module provides opportunity to use drag and resize functionality on HTML elements\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxDragDirective\n                        \n                        \n                            NgxDragHandleDirective\n                        \n                        \n                            NgxResizeDirective\n                        \n                        \n                            NgxResizeHandleDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxDragDirective\n                        \n                        \n                            NgxDragHandleDirective\n                        \n                        \n                            NgxResizeDirective\n                        \n                        \n                            NgxResizeHandleDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NgxDragDirective} from './drag/drag.directive';\nimport {NgxDragHandleDirective} from './drag/drag-handle.directive';\nimport {NgxResizeDirective} from './resize/resize.directive';\nimport {NgxResizeHandleDirective} from './resize/resize-handle.directive';\nimport {SharedModule} from './shared/shared.module';\n\n/**\n * The module provides opportunity to use drag and resize functionality on HTML elements\n *\n * @author Dmytro Parfenov \n */\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    NgxDragDirective,\n    NgxDragHandleDirective,\n    NgxResizeDirective,\n    NgxResizeHandleDirective\n  ],\n  exports: [NgxDragDirective, NgxDragHandleDirective, NgxResizeDirective, NgxResizeHandleDirective]\n})\nexport class NgxDragResizeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxResize.html":{"url":"interfaces/NgxResize.html","title":"interface - NgxResize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxResize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nativeEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                    \n                                \n                                \n                                    \n                                        nativeEvent:         Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxResize extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxResizeHandleDirective.html":{"url":"directives/NgxResizeHandleDirective.html","title":"directive - NgxResizeHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxResizeHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize-handle.directive.ts\n        \n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as one of handle of resizing element for NgxResizeDirective\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxResizeHandle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResizeHandle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, platformId: object, resizeDirective: NgxResizeDirective)\n                    \n                \n                        \n                            \n                                Defined in src/lib/resize/resize-handle.directive.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resizeDirective\n                                                  \n                                                        \n                                                                        NgxResizeDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResizeHandle\n                    \n                \n                \n                    \n                        Type :         NgxResizeHandleType | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/resize/resize-handle.directive.ts:33\n                            \n                        \n                \n                    \n                        Sets the attribute which define the side the HTML element will affect during drag\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxResizeHandleType} from './resize-handle-type.enum';\nimport {NgxResizeDirective} from './resize.directive';\n\n/**\n * The directive that allows to mark HTML element as one of handle of resizing element for {@link NgxResizeDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n  selector: '[ngxResizeHandle]',\n})\nexport class NgxResizeHandleDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Sets the attribute which define the side the HTML element will affect during drag\n   */\n  @Input('ngxResizeHandle')\n  @HostBinding('attr.data-ngx-resize-handle-type')\n  type: NgxResizeHandleType | null = null;\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    @Inject(PLATFORM_ID) private readonly platformId: object,\n    @Optional() private readonly resizeDirective: NgxResizeDirective\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformServer(this.platformId) || !this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.observe(this.elementRef.nativeElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    if (!this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.unsubscribe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PositionBase.html":{"url":"interfaces/PositionBase.html","title":"interface - PositionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PositionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/position-base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PositionBase {\n  x: number;\n  y: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scale.html":{"url":"interfaces/Scale.html","title":"interface - Scale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/scale.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        delta\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Scale {\n  delta: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n0.0.3\n\ndocumentation typos\n\n0.0.2\n\nadded unit tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxResizeHandleType   (src/.../resize-handle-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/resize/resize-handle-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxResizeHandleType\n                    \n                \n                        \n                            \n                                 TopLeft\n                            \n                        \n                        \n                            \n                                Value : top-left\n                            \n                        \n                        \n                            \n                                 Top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 TopRight\n                            \n                        \n                        \n                            \n                                Value : top-right\n                            \n                        \n                        \n                            \n                                 Right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n                        \n                            \n                                 BottomRight\n                            \n                        \n                        \n                            \n                                Value : bottom-right\n                            \n                        \n                        \n                            \n                                 Bottom\n                            \n                        \n                        \n                            \n                                Value : bottom\n                            \n                        \n                        \n                            \n                                 BottomLeft\n                            \n                        \n                        \n                            \n                                Value : bottom-left\n                            \n                        \n                        \n                            \n                                 Left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-drag-resize\nThe Angular library provides opportunity to use drag and resize functionality on HTML element.\nDemo\nInstall\nNPM: npm install ngx-drag-resize\nYarn: yarn add ngx-drag-resize\nUsage\nImport NgxDragResizeModule to your working module\nimport {NgxDragResizeModule} from 'ngx-drag-resize';\n\n@NgModule({\n  imports: [\n    NgxDragResizeModule\n  ]\n})\nexport class AppModule { }Use directives in your template\nSimple drag\ndrag meInitiates only by dragging ngxDragHandle\n\n  drag me\n  handle\nA simple resize will work only by using scroll or two fingers on touch devices\nresize meResize using borders.\nYou have to style all elements as you want.\n\n  resize me\n  \n  \n  \n  \n  \n  \n  \n  \nMore examples you can find in demo app\nDocumentation\nDocs site\nContributing\nDevelopment repository\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxDragResizeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxDragResizeModule\n\n\n\ncluster_NgxDragResizeModule_declarations\n\n\n\ncluster_NgxDragResizeModule_exports\n\n\n\n\nNgxDragDirective\n\nNgxDragDirective\n\n\n\nNgxDragResizeModule\n\nNgxDragResizeModule\n\nNgxDragResizeModule -->\n\nNgxDragDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragHandleDirective\n\nNgxDragHandleDirective\n\nNgxDragResizeModule -->\n\nNgxDragHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeDirective\n\nNgxResizeDirective\n\nNgxDragResizeModule -->\n\nNgxResizeDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeHandleDirective\n\nNgxResizeHandleDirective\n\nNgxDragResizeModule -->\n\nNgxResizeHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragDirective \n\nNgxDragDirective \n\nNgxDragDirective  -->\n\nNgxDragResizeModule->NgxDragDirective \n\n\n\n\n\nNgxDragHandleDirective \n\nNgxDragHandleDirective \n\nNgxDragHandleDirective  -->\n\nNgxDragResizeModule->NgxDragHandleDirective \n\n\n\n\n\nNgxResizeDirective \n\nNgxResizeDirective \n\nNgxResizeDirective  -->\n\nNgxDragResizeModule->NgxResizeDirective \n\n\n\n\n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective  -->\n\nNgxDragResizeModule->NgxResizeHandleDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Axis   (src/.../axis.ts)\n                        \n                        \n                            MovementNative   (src/.../movement-native.ts)\n                        \n                        \n                            PositionStrategy   (src/.../position-strategy.ts)\n                        \n                        \n                            PositionType   (src/.../position-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core/axis.ts\n    \n    \n        \n            \n                \n                    \n                    Axis\n                \n            \n            \n                \n                        \"x\" | \"y\" | null\n\n                \n            \n        \n    \n    src/lib/core/movement/movement-native.ts\n    \n    \n        \n            \n                \n                    \n                    MovementNative\n                \n            \n            \n                \n                        MouseEvent | TouchEvent\n\n                \n            \n        \n    \n    src/lib/drag/position-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    PositionStrategy\n                \n            \n            \n                \n                        \"relative\" | \"free\"\n\n                \n            \n        \n    \n    src/lib/resize/position-type.ts\n    \n    \n        \n            \n                \n                    \n                    PositionType\n                \n            \n            \n                \n                        \"fixed\" | \"absolute\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
